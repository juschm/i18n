rule typescript_to_nodejs
  depfile = $in.depfile
  description = typescript_to_nodejs: $in → $out (DEPFILE=$depfile)
  command = ck typescript_to_nodejs --tsc_home ./node_modules/typescript --depfile $depfile --in $in

rule commonjs_bundle
  description = commonjs_bundle (cjsc): $in → $out (config=$CJSC_CONFIG)
  depfile = $out.depfile
  command = ck commonjs_bundle --out $out --in $in --config $CJSC_CONFIG --depfile $depfile $extra_args

build lib/Counter.js lib/Counter.d.ts lib/Counter.js.map: $
    typescript_to_nodejs lib/Counter.ts
build lib/LoadingCache.js lib/LoadingCache.d.ts lib/LoadingCache.js.map: $
    typescript_to_nodejs lib/LoadingCache.ts
build lib/config.js lib/config.d.ts lib/config.js.map: typescript_to_nodejs $
    lib/config.ts
build lib/extractMessages.js lib/extractMessages.d.ts $
    lib/extractMessages.js.map: typescript_to_nodejs lib/extractMessages.ts
build lib/fingerprinting.js lib/fingerprinting.d.ts $
    lib/fingerprinting.js.map: typescript_to_nodejs lib/fingerprinting.ts
build lib/hashing.js lib/hashing.d.ts lib/hashing.js.map: $
    typescript_to_nodejs lib/hashing.ts
build lib/message_types.js lib/message_types.d.ts lib/message_types.js.map: $
    typescript_to_nodejs lib/message_types.ts
build lib/newSet.js lib/newSet.d.ts lib/newSet.js.map: typescript_to_nodejs $
    lib/newSet.ts
build lib/parse_html.js lib/parse_html.d.ts lib/parse_html.js.map: $
    typescript_to_nodejs lib/parse_html.ts
build lib/parse_messages.js lib/parse_messages.d.ts $
    lib/parse_messages.js.map: typescript_to_nodejs lib/parse_messages.ts
build lib/placeholderRegistry.js lib/placeholderRegistry.d.ts $
    lib/placeholderRegistry.js.map: typescript_to_nodejs $
    lib/placeholderRegistry.ts
build lib/placeholderRegistryHints.js lib/placeholderRegistryHints.d.ts $
    lib/placeholderRegistryHints.js.map: typescript_to_nodejs $
    lib/placeholderRegistryHints.ts
build lib/placeholderRegistryHintsForHtmlTags.js $
    lib/placeholderRegistryHintsForHtmlTags.d.ts $
    lib/placeholderRegistryHintsForHtmlTags.js.map: typescript_to_nodejs $
    lib/placeholderRegistryHintsForHtmlTags.ts
build lib/quoting.js lib/quoting.d.ts lib/quoting.js.map: $
    typescript_to_nodejs lib/quoting.ts
build lib/serializer.js lib/serializer.d.ts lib/serializer.js.map: $
    typescript_to_nodejs lib/serializer.ts
build lib/serializers/json.js lib/serializers/json.d.ts $
    lib/serializers/json.js.map: typescript_to_nodejs lib/serializers/json.ts
build lib/stringUtils.js lib/stringUtils.d.ts lib/stringUtils.js.map: $
    typescript_to_nodejs lib/stringUtils.ts
build ./web/index.js ./web/index.d.ts ./web/index.js.map: $
    typescript_to_nodejs ./web/index.ts
build ./web/directives/message.js ./web/directives/message.d.ts $
    ./web/directives/message.js.map: typescript_to_nodejs $
    ./web/directives/message.ts
build ./web/directives/messagePart.js ./web/directives/messagePart.d.ts $
    ./web/directives/messagePart.js.map: typescript_to_nodejs $
    ./web/directives/messagePart.ts
build ./web/directives/messageParts.js ./web/directives/messageParts.d.ts $
    ./web/directives/messageParts.js.map: typescript_to_nodejs $
    ./web/directives/messageParts.ts
build ./web/directives/ngExpr.js ./web/directives/ngExpr.d.ts $
    ./web/directives/ngExpr.js.map: typescript_to_nodejs $
    ./web/directives/ngExpr.ts
build ./web/directives/textPart.js ./web/directives/textPart.d.ts $
    ./web/directives/textPart.js.map: typescript_to_nodejs $
    ./web/directives/textPart.ts
build ./web/directives/htmlTagPair.js ./web/directives/htmlTagPair.d.ts $
    ./web/directives/htmlTagPair.js.map: typescript_to_nodejs $
    ./web/directives/htmlTagPair.ts
build ./web/bundle.js: commonjs_bundle ./web/index.js | ./web/cjsc_config.json
  extra_args = --minify
  CJSC_CONFIG = ./web/cjsc_config.json

rule build_ninja_file
  description = Building build.ninja
  deps = gcc
  depfile = build.ninja.d
  command = echo $$'build.ninja:  $
    /Users/chirayu/ck/ck5/python/ck/ckbuild/prologue.jinja $
    /Users/chirayu/ck/ck5/python/ck/ckbuild/epilogue.jinja $
    /Users/chirayu/ck/ck5/python/ck/ckbuild/ninja_base.jinja $
    /Users/chirayu/ck/ck5/python/ck/ckbuild/__init__.py $
    /Users/chirayu/ck/ck5/python/ck/ckbuild/__main__.py $
    /Users/chirayu/ck/ck5/python/ck/ckbuild/ninja_syntax.py $
    /Users/chirayu/ck/ck5/python/ck/ckbuild/rules.py $
    ./web/build.ckb' > build.ninja.d && ck build_ninja_from_ckb --ninja_fname=build.ninja $in
  generator = 1

build build.ninja: build_ninja_file build.ckb
